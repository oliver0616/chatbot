[{"name": "Default Fallback intent", "userDefined": false, "apiTrigger": false, "intentId": "fallback", "_id": {"$oid": "59aae7bd26f6f60007b06fb3"}, "speechResponse": "{{ \n\n[\n    \"Sorry ### I'm having trouble understanding you.\",\n    \"Hmm ### I cant handle that yet.\",\n    \"Can you please re-phrase your query ?\"\n] | random \n\n}}\ufeff\n\n"}, {"name": "cancel", "trainingData": [{"text": "i want to cancel", "entities": []}, {"text": "cancel that", "entities": []}, {"text": "cancel", "entities": []}], "userDefined": false, "apiTrigger": false, "intentId": "cancel", "_id": {"$oid": "59aae7bd26f6f60007b06fb5"}, "speechResponse": "Ok. Canceled."}, {"name": "Welcome message", "trainingData": [{"text": "hello there", "entities": []}, {"text": "hey there", "entities": []}, {"text": "hii", "entities": []}, {"text": "heyy", "entities": []}, {"text": "howdy", "entities": []}, {"text": "hey", "entities": []}, {"text": "hello", "entities": []}, {"text": "hi", "entities": []}], "userDefined": false, "apiTrigger": false, "intentId": "init_conversation", "_id": {"$oid": "59aae7bd26f6f60007b06fb7"}, "speechResponse": "Hi {{context[\"username\"] }} ### What can i do for you ?"}, {"name": "Giant meme", "parameters": [], "userDefined": true, "trainingData": [{"text": "look at my tiny toothbrush", "entities": [{"begin": 11, "end": 15, "name": "small", "value": "tiny"}, {"begin": 16, "end": 26, "name": "Objects", "value": "toothbrush"}]}, {"text": "I have a small toothbrush", "entities": [{"begin": 9, "end": 14, "name": "small", "value": "small"}, {"begin": 15, "end": 25, "name": "Objects", "value": "toothbrush"}]}], "apiTrigger": false, "intentId": "giant", "_id": {"$oid": "5b5888813c59c6000b13683e"}, "speechResponse": "IM A GIANT KATE!", "labeledSentences": []}, {"name": "knn information", "trainingData": [{"text": "tell me about knn", "entities": [{"begin": 14, "end": 17, "name": "knn", "value": "knn"}]}, {"text": "What do you know about knn.", "entities": [{"begin": 23, "end": 26, "name": "knn", "value": "knn"}]}, {"text": "I need help with knn.", "entities": [{"begin": 17, "end": 20, "name": "knn", "value": "knn"}]}, {"text": "Can you help me with knn.", "entities": [{"begin": 21, "end": 24, "name": "knn", "value": "knn"}]}], "userDefined": true, "apiTrigger": false, "intentId": "knn_info", "_id": {"$oid": "5b588bf73c59c6000b136841"}, "speechResponse": "Okay I found information on k-nearest neighbors.\n###\nThis algorithm is not trained like the previous machine learning algorithms. Nearest Neighbors is an instance-based learning algorithm, meaning it simply scores the training data instead of making a general model. It works by calculating the distance from a query point to all other points in the training set, and the top k closest points are returned. This can be very computationally demanding so an additional algorithm is typically implemented to help calculate distance.  For more information go <a href=\"#knn\">here</a> ", "labeledSentences": []}, {"name": "Distance metrics", "parameters": [], "userDefined": true, "trainingData": [{"text": "can you tell me more about distance metrics", "entities": [{"begin": 27, "end": 43, "name": "distance", "value": "distance metrics"}]}, {"text": "Can I have more information on distance metrics.", "entities": [{"begin": 31, "end": 47, "name": "distance", "value": "distance metrics"}]}, {"text": "Can you help me with distance metrics.", "entities": [{"begin": 21, "end": 37, "name": "distance", "value": "distance metrics"}]}], "apiTrigger": false, "intentId": "distance_metrics", "_id": {"$oid": "5b5890ed3c59c6000b13685e"}, "speechResponse": "Okay, I found additional information on distance metrics.\n###\nAdditionally the distance metric can be tailored to the dataset. These include Euclidean, Manhattan, Chebyshev, and Minkowski. Find the equations <a href=\"#distance\">here</a> .\n###\nMinowski distance is a generalized form of the other distance formulas. When p = 1 it is the same as Manhattan distance, when p approaches infinity it is the same as Chebyshev distance, and when p = 2 it is the same as Euclidean distance. The value for p can be any real number.", "labeledSentences": []}, {"name": "Tree Algorithms", "parameters": [], "userDefined": true, "trainingData": [{"text": "talk to me about balltree", "entities": [{"begin": 17, "end": 25, "name": "tree", "value": "balltree"}]}, {"text": "how do you speed up knn", "entities": []}, {"text": "How can I speed up neighbor search", "entities": []}, {"text": "How can I speed up knn", "entities": [{"begin": 19, "end": 22, "name": "knn", "value": "knn"}]}, {"text": "Tell me more about tree algorithms", "entities": [{"begin": 19, "end": 23, "name": "tree", "value": "tree"}]}, {"text": "Explain the tree algorithms.", "entities": [{"begin": 12, "end": 16, "name": "tree", "value": "tree"}]}], "apiTrigger": false, "intentId": "tree", "_id": {"$oid": "5b58922e3c59c6000b136860"}, "speechResponse": "Okay here are some ways to speed up nearest neighbor searches.\n###\nThe two most frequently used algorithms are kd-tree and BallTree. Both are considerably faster than calculating neighbors with brute force, and BallTree performs especially well in high dimensions. Note that tree implementations cannot be applied to sparse data.", "labeledSentences": []}]
